# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type Ingredient {
  id: ID!
  mesureUnits: [MesureUnit!]!
  name: String!
  previewPicture: String!
  recipeIngredients: [RecipeIngredient!]!
}

type LoginResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

enum MesureUnit {
  Centiliters
  Gram
  Kilogram
  Liter
  Milliliter
  Pinch
  Tablespoon
  Teaspoon
  Unity
}

type Mutation {
  confirmEmail(email: String!, emailCode: Float!): LoginResponse!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  refreshTokens(refreshToken: String!): LoginResponse!
  register(createUserInput: CreateUserInput!): User!
  resetPassword(email: String!, emailCode: Float!, newPassword: String!): LoginResponse!
  sendRegisterConfirmation(email: String!): User!
  sendResetPasswordCode(email: String!): String!
  updateAccount(updateUserInput: UpdateUserInput!): User!
}

type Query {
  account: User!
  recipes: [Recipe!]!
}

type Recipe {
  cookingTime: String!
  creator: User!
  difficulty: String!
  id: ID!
  portion: Int!
  previewPicture: String!
  recipeIngredients: [RecipeIngredient!]!
  recipeTags: [RecipeTag!]!
  steps: [String!]!
  title: String!
  tutorialVideo: String!
}

type RecipeIngredient {
  id: ID!
  ingredient: Ingredient!
  mesureUnit: MesureUnit!
  quantity: Int!
  recipe: Recipe!
}

type RecipeTag {
  id: ID!
  recipe: Recipe!
  tag: Tag!
}

type Tag {
  id: ID!
  name: String!
  recipeTags: [RecipeTag!]!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  password: String
}

type User {
  email: String!
  id: ID!
  recipes: [Recipe!]!
  role: UserRoles!
  status: UserStatus!
}

enum UserRoles {
  admin
  user
  visitor
}

enum UserStatus {
  isActive
  isPending
}